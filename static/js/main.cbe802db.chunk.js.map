{"version":3,"sources":["Header.js","InputForm.js","List.js","Main.js","Copyright.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","InputForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","name","value","setState","defineProperty","submitForm","handleSubmit","state","initialState","description","_this$state","Form","FormGroup","Label","for","Input","type","id","placeholder","onChange","rows","Button","color","onClick","List","listItems","listData","map","item","index","ListGroupItem","key","ListGroupItemHeading","removeListItem","io","ListGroupItemText","ListGroup","Main","filter","listItem","i","concat","toConsumableArray","src_InputForm","src_List_0","Copyright","year","Footer","src_Copyright","Date","getFullYear","App","Fragment","src_Header","src_Main","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cbe802db.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"py-5 border-bottom\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\r\n              <h1 className=\"mb-0 display-4\">React to-do list</h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass InputForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.initialState = {\r\n      name: '',\r\n      description: ''\r\n    };\r\n\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  render() {\r\n    const { name, description } = this.state;\r\n\r\n    return (\r\n      <Form>\r\n        <FormGroup>\r\n          <Label for=\"name\">Name</Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"description\">Description</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            name=\"description\"\r\n            id=\"description\"\r\n            placeholder=\"Description\"\r\n            rows=\"4\"\r\n            value={description}\r\n            onChange={this.handleChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Button color=\"primary\" onClick={this.submitForm}>\r\n            Add to list\r\n          </Button>\r\n        </FormGroup>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputForm;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText\r\n} from 'reactstrap';\r\nimport { IoMdCreate, IoMdTrash } from 'react-icons/io';\r\nimport './List.css';\r\n\r\nclass List extends Component {\r\n  render() {\r\n    const listItems = this.props.listData.map((item, index) => {\r\n      return (\r\n        <ListGroupItem className=\"list-group-item-action\" key={index}>\r\n          <div className=\"d-flex justify-content-between mb-2\">\r\n            <ListGroupItemHeading className=\"mb-0\">\r\n              {item.name}\r\n            </ListGroupItemHeading>\r\n            <button onClick={() => this.props.removeListItem(index)}>\r\n              <IoMdTrash />\r\n            </button>\r\n          </div>\r\n          <ListGroupItemText className=\"mb-0\">\r\n            {item.description}\r\n          </ListGroupItemText>\r\n        </ListGroupItem>\r\n      );\r\n    });\r\n\r\n    return <ListGroup>{listItems}</ListGroup>;\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from 'react';\r\nimport InputForm from './InputForm';\r\nimport List from './List';\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    listItems: []\r\n  };\r\n\r\n  removeListItem = index => {\r\n    const { listItems } = this.state;\r\n\r\n    this.setState({\r\n      listItems: listItems.filter((listItem, i) => {\r\n        return i !== index;\r\n      })\r\n    });\r\n  };\r\n\r\n  handleSubmit = listItem => {\r\n    this.setState({ listItems: [...this.state.listItems, listItem] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"py-5\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\r\n              <InputForm handleSubmit={this.handleSubmit} />\r\n              <List\r\n                listData={this.state.listItems}\r\n                removeListItem={this.removeListItem}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\n\r\nclass Copyright extends Component {\r\n  // copyright component with year property set to current year\r\n  render() {\r\n    return (\r\n      <p className=\"mb-0 text-secondary\">\r\n        &copy; Oliver Tuck {this.props.year}\r\n      </p>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Copyright;\r\n","import React, { Component } from 'react';\r\nimport Copyright from './Copyright';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"py-5 border-top\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2 col-lg-6 offset-lg-3\">\r\n              <Copyright year={new Date().getFullYear()} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Main />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}